services:
  postgres:
    image: postgres:16-alpine
    container_name: lostandfound-db
    environment:
      POSTGRES_USER: lostandfound
      POSTGRES_PASSWORD: lostandfound123
      POSTGRES_DB: lostandfound
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - lostandfound-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lostandfound"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lostandfound-backend
    environment:
      NODE_ENV: development
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: lostandfound
      DB_PASSWORD: lostandfound123
      DB_NAME: lostandfound
      JWT_SECRET: your-secret-key-change-in-production
    ports:
      - "3000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - lostandfound-network
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lostandfound-frontend
    environment:
      VITE_API_URL: http://localhost:3000
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - lostandfound-network
    command: npm run dev

volumes:
  postgres_data:

networks:
  lostandfound-network:
    driver: bridge